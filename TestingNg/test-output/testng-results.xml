<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="61" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
    <groups>
    </groups>
    <test name="Test78" duration-ms="61" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
      <class name="us.pack.Annotations">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="beforeSuite" is-config="true" duration-ms="10" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod1()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="beforeMethod1" is-config="true" duration-ms="0" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod1 -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="beforeMethod2" is-config="true" duration-ms="0" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="Test77()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="Test77" duration-ms="8" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test77 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod1()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="beforeMethod1" is-config="true" duration-ms="1" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod1 -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="beforeMethod2" is-config="true" duration-ms="0" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="FAIL" signature="Test78()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="Test78" duration-ms="4" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problem: 
Arr cannot be resolved to a variable
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problem: 
Arr cannot be resolved to a variable

at us.pack.Annotations.Test78(Annotations.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test78 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="afterMethod" is-config="true" duration-ms="2" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:us.pack.Annotations@1d16f93d]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-05-27T16:21:10 BST" finished-at="2020-05-27T16:21:10 BST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- us.pack.Annotations -->
    </test> <!-- Test78 -->
  </suite> <!-- Suite -->
</testng-results>
